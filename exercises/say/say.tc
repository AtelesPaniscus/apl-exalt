log←'./say.tc.log'
⍎ ')COPY ',(⎕FIO 30),'/../../test.apl'

⍝ assert a match

∇ R ← A assert∆match B
    R ← A ≡ B
    → R / exit
    R ← 1⎕CR A
exit:
∇

test∆copy_relative 'say.apl'
test∆clear_log log

⍝ check test version
  1⎕CR	(version)
'1.0.0'

⍝ ∇say

⍝ zero
  (say 0) assert∆match 'zero'
1

⍝ one
  (say 1) assert∆match 'one'
1

⍝ fourteen
  (say 14) assert∆match 'fourteen'
1

⍝ twenty
  (say 20) assert∆match 'twenty'
1

⍝ twenty-two
  (say 22) assert∆match 'twenty-two'
1

⍝ one hundred
  (say 100) assert∆match 'one hundred'
1

⍝ one hundred twenty-three
  (say 123) assert∆match 'one hundred twenty-three'
1

⍝ one thousand
  (say 1000) assert∆match 'one thousand'
1

⍝ one thousand two hundred thirty-four
  (say 1234) assert∆match 'one thousand two hundred thirty-four'
1

⍝ one million
  (say 1000000) assert∆match 'one million'
1

⍝ one million two thousand three hundred forty-five
  (say 1002345) assert∆match 'one million two thousand three hundred forty-five'
1

⍝ one billion
  (say 1000000000) assert∆match 'one billion'
1

⍝ a big number
  (say 987654321123) assert∆match 'nine hundred eighty-seven billion six hundred fifty-four million three hundred twenty-one thousand one hundred twenty-three'
1

⍝ numbers below zero are out of range
  1⎕CR test∆try 'say -1'
1 'DOMAIN ERROR'

⍝ numbers above 999,999,999,999 are out of range
  1⎕CR test∆try 'say 1000000000000'
1 'DOMAIN ERROR'

test∆show_log log
