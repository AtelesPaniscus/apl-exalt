log←'./collatz-conjecture.tc.log'
⍎ ')COPY ',(⎕FIO 30),'/../../test.apl'

⍝ assert a match

∇ R ← A assert∆match B
    R ← A ≡ B
    → R / exit
    R ← 1⎕CR A
exit:
∇

test∆copy_relative 'collatz-conjecture.apl'
test∆clear_log log

⍝ check test version
  1⎕CR	(version)
'1.2.0'

⍝ ∇steps

⍝ zero steps for one
  (steps 1) assert∆match 0
1

⍝ divide if even
  (steps 16) assert∆match 4
1

⍝ even and odd steps
  (steps 12) assert∆match 9
1

⍝ Large number of even and odd steps
  (steps 1000000) assert∆match 152
1

⍝ zero is an error
  1⎕CR test∆try 'steps 0'
1 'DOMAIN ERROR'

⍝ negative value is an error
  1⎕CR test∆try 'steps -15'
1 'DOMAIN ERROR'

test∆show_log log
